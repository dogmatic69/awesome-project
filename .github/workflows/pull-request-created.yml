name: Continuous Integration

on:
  pull_request:
    branches:
      - master

jobs:
  #############################################################################
  #      __    _       __
  #     / /   (_)___  / /_
  #    / /   / / __ \/ __/
  #   / /___/ / / / / /_
  #  /_____/_/_/ /_/\__/
  #
  #############################################################################
  lint:
    name: Code Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component:
          - box-api-1
          - box-api-2
          - box-ui
          - terraform/infrastructure
          - terraform/permissions
          - terraform/services
    steps:
      - uses: actions/checkout@master
      - name: Lint the code
        run: cd ${{ matrix.component }} && make lint
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: "lint-${{ matrix.component }}"
          path: /tmp/output

  #############################################################################
  #    ______          __
  #   /_  __/__  _____/ /_
  #    / / / _ \/ ___/ __/
  #   / / /  __(__  ) /_
  #  /_/  \___/____/\__/
  #
  #############################################################################
  test:
    name: Code Test
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        component:
          - box-api-1
          - box-api-2
          - box-ui
    steps:
      - uses: actions/checkout@master
      - name: Test the component
        run: cd ${{ matrix.component }} && make test
      - uses: actions/upload-artifact@v1
        if: always()
        with:
            name: "test-${{ matrix.component }}"
            path: /tmp/output

  #############################################################################
  #      ___             ___ __
  #     /   | __  ______/ (_) /_
  #    / /| |/ / / / __  / / __/
  #   / ___ / /_/ / /_/ / / /_
  #  /_/  |_\__,_/\__,_/_/\__/
  #
  #############################################################################
  audit:
    name: Code Audit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component:
          - box-api-1
          - box-api-2
          - box-ui
    steps:
      - uses: actions/checkout@master
      - name: Scan the docker image
        run: cd ${{ matrix.component }} && make audit
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: "scan-${{ matrix.component }}"
          path: /tmp/output

  #############################################################################
  #      ____        __    ___      __
  #     / __ \__  __/ /_  / (_)____/ /_
  #    / /_/ / / / / __ \/ / / ___/ __ \
  #   / ____/ /_/ / /_/ / / (__  ) / / /
  #  /_/    \__,_/_.___/_/_/____/_/ /_/
  #
  #############################################################################
  publish:
    name: Code Publish
    runs-on: ubuntu-latest
    needs: [lint, test, audit]
    strategy:
      matrix:
        component:
          - box-api-1
          - box-api-2
          - box-ui
    steps:
    - uses: actions/checkout@master
    - name: publish the package
      run: |
        cd ${{ matrix.component }}
        DOCKER_SERVICE=${{ matrix.component }} \
        DOCKER_TOKEN=${{ secrets.GITHUB_TOKEN }} \
        DOCKER_USER=${{ github.actor }} \
          make publish

#   slack-pr-ready:
#     runs-on: ubuntu-latest
#     needs: [lint, test, scan]
#     steps:
#       - name: Extract branch name
#         shell: bash
#         run: echo "##[set-output name=id;]$(echo ${GITHUB_REF#refs/pull/} | sed 's/\/merge//')"
#         id: pr-id
#       - name: PR Ready
#         uses: 8398a7/action-slack@v2
#         with:
#           status: custom
#           payload: |
#             {
#               text: ":shipit-parrot: PR is ready for review!",
#               attachments: [{
#                 "author_name": "@${{ github.actor }}",
#                 fallback: 'fallback',
#                 color: 'good',
#                 title: 'CI Result',
#                 text: 'Succeeded',
#                 fields: [{
#                   title: 'PR Link',
#                   value: "https://github.com/${{ github.repository }}/pull/${{ steps.pr-id.outputs.id }}",
#                   short: false
#                 }],
#                 actions: [{
#                 }]
#               }]
#             }
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

#   # publish-npm:
#   #   runs-on: ubuntu-latest
#   #   # needs: [test, scan]
#   #   strategy:
#   #     matrix:
#   #       component: ['box-api-1']
#   #   steps:
#   #   - uses: actions/checkout@master
#   #   - name: publish the package
#   #     run: |
#   #       yarn config set _authToken ${{ secrets.GITHUB_TOKEN }}
#   #       echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> "${{ matrix.component }}/files/src/.npmrc"
#   #       cp "${{ matrix.component }}/files/src/.npmrc" ~/.npmrc
#   #       make -C ${{ matrix.component }} publish-npm NODE_PATH=./files/src/
